<% provide(:title, "Opportunity - #{@opportunity.name}") %>
<div class="span8">
	<div class="row-fluid">
		<% flash.each do |key, value| %>
			<div class="alert alert-<%= key %> fade in">
		      <a class="close" data-dismiss="alert" href="#">&times;</a>
		      <%= value %>
		    </div>
		<% end %>
	</div>
	<div id="main_body_container" class="row-fluid">
	</div>
</div>

<% content_for :sidebar_right do %>
<div class="span2">
	<div class="row-fluid">
		<%= link_to "Edit this opportunity", edit_opportunity_path(@opportunity.pub_key), :class => 'btn btn-primary' %>
	</div>
	<div id="sidebar_app_fields_container"class="row-fluid">
		<div class="show-field">
			<span class="show-label">Current Milestone</span>
			<br>
			<span class="show-value"><%= @opportunity.milestone.name %></span>
		</div>
		<div class="show-field">
			<span class="show-label">Owner</span>
			<br>
			<span class="show-value"><%= @opportunity.owner.name %></span>
		</div>
		<div class="show-field">
			<span class="show-label">Estimated Value</span>
			<br>
			<span class="show-value">$<%= @opportunity.estimated_value %></span>
		</div>
		<div class="show-field">
			<span class="show-label">Estimated Close Date</span>
			<br>
			<span class="show-value"><%= @opportunity.estimated_close %></span>
		</div>
		<div class="show-field">
			<span class="show-label">Actual Close Date</span>
			<br>
			<span class="show-value"><%= @opportunity.actual_close %></span>
		</div>
		<div class="show-field">
			<span class="show-label">Description</span>
			<br>
			<span class="show-value"><%= @opportunity.description %></span>
		</div>
	</div>
	<div id="sidebar_body_container" class="row-fluid">
	</div>
</div>
<% end %>

<script language="javascript">
	$(function(){
		window.vent = _.extend({}, Backbone.Events);
		
		if(gon.opportunity){
			this.opportunity = new Quota.Models.Opportunity($.parseJSON(gon.opportunity));
		}
		else{
			this.opportunity = new Quota.Models.Opportunity();
			this.opportunity.fetch();
		}
		
		if(gon.opportunity_contacts){
			this.opportunity_contacts = new Quota.Collections.OpportunityContacts($.parseJSON(gon.opportunity_contacts));
		}
		else{
			this.opportunity_contacts = new Quota.Collections.OpportunityContacts();
			this.opportunity_contacts.fetch();
		}
		
		if(gon.opportunity_documents){
			this.opportunity_documents = new Quota.Collections.Documents(gon.opportunity_documents);
		}
		else{
			this.opportunity_documents = new Quota.Collections.Documents();
			this.opportunity_documents.fetch();
		}
		
		this.opportunity.set("opportunity_contacts", this.opportunity_contacts);
		this.opportunity.set("documents", this.opportunity_documents);
		
		
		// console.log($.parseJSON(gon.opportunity).milestone);
	
		var page_body_view = new Quota.Views.ShowOpportunity({model: this.opportunity, vent: vent});
		$('#main_body_container').html(page_body_view.render().el);
		
		var sidebar_body_view = new Quota.Views.ShowOpportunitySidebar({model: this.opportunity, vent: vent});
		$('#sidebar_body_container').html(sidebar_body_view.render().el);
	});	
	
	
</script>